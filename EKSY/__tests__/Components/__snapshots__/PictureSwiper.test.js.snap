// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PictureSwiper renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "height": "100%",
          "width": "100%",
        },
        undefined,
      ],
      Object {
        "flex": 1,
      },
    ]
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    bounces={false}
    horizontal={true}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    pagingEnabled={true}
    removeClippedSubviews={true}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
  >
    <View>
      <View
        style={
          Object {
            "height": undefined,
            "width": undefined,
          }
        }
      >
        <View>
          <FastImageView
            onFastImageError={[Function]}
            onFastImageLoad={[Function]}
            resizeMode="contain"
            source={
              Object {
                "uri": "http://www.catpic.com",
              }
            }
            style={
              Object {
                "height": "100%",
                "width": "100%",
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "flexDirection": "row",
          "flexWrap": "wrap",
          "height": 32,
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={undefined}
      testID={undefined}
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgb(158, 158, 158)",
              "borderRadius": 6,
              "height": 12,
              "margin": 10,
              "width": 12,
            },
            undefined,
            Object {
              "backgroundColor": "rgb(245, 245, 245)",
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
