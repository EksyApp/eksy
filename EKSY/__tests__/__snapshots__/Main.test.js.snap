// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`main renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "right": 250,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "rgb(243,244,229)",
            "flex": 1,
            "flexDirection": "column",
          }
        }
      >
        <View
          style={Object {}}
        >
          <Image
            source={1}
            style={Object {}}
          />
        </View>
        <View
          style={
            Object {
              "flexDirection": "column",
              "justifyContent": "space-around",
            }
          }
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "rgb(230,232,227)",
                "borderColor": "rgb(101,114,122)",
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 40,
                "marginLeft": 5,
                "marginRight": 5,
                "marginTop": 5,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "color": "rgb(101,114,122)",
                  "fontSize": 16,
                  "fontWeight": "600",
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Go to map
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "rgb(230,232,227)",
                "borderColor": "rgb(101,114,122)",
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 40,
                "marginLeft": 5,
                "marginRight": 5,
                "marginTop": 5,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "color": "rgb(101,114,122)",
                  "fontSize": 16,
                  "fontWeight": "600",
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Add a marker
            </Text>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            isTVSelectable={true}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "stretch",
                "backgroundColor": "rgb(230,232,227)",
                "borderColor": "rgb(101,114,122)",
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 40,
                "marginLeft": 5,
                "marginRight": 5,
                "marginTop": 5,
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "center",
                  "color": "rgb(101,114,122)",
                  "fontSize": 16,
                  "fontWeight": "600",
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Login
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "height": 1334,
          "left": 0,
          "position": "absolute",
          "top": 0,
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
          "width": 750,
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            pointerEvents="auto"
            style={
              Object {
                "backgroundColor": "white",
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "black",
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "flex-end",
                    }
                  }
                >
                  <MapView
                    initialRegion={
                      Object {
                        "latitude": 60.184356,
                        "latitudeDelta": 0.1,
                        "longitude": 24.949326,
                        "longitudeDelta": 0.1,
                      }
                    }
                    onRegionChange={[Function]}
                    showCompass={false}
                    showsUserLocation={true}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Array [
                        false,
                        false,
                        false,
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 50,
                          "left": 0,
                          "position": "absolute",
                          "top": 0,
                          "width": 50,
                          "zIndex": 1,
                        },
                      ],
                    ]
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <Text
                    accessible={true}
                    allowFontScaling={false}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "black",
                          "fontSize": 35,
                        },
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Object {
                            "color": "rgb(101,114,122)",
                          },
                        ],
                        Object {
                          "fontFamily": "Material Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
